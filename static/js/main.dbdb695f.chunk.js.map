{"version":3,"sources":["components/Title.js","components/Flex.js","components/Line.js","components/Console.js","components/Button.js","App.js","index.js"],"names":["StyledTitle","styled","h1","props","color","theme","colors","primary","Title","StyledFlex","div","direction","align","justify","margin","Flex","StyledLine","Line","StyledConsole","textarea","media","phone","tablet","Console","useState","lines","setLines","map","line","i","onKeyPress","e","charCode","rotateAnimation","keyframes","StyledButton","button","attrs","outlined","css","background","Button","AppWrapper","App","onClick","confirm","alert","Global","createGlobalStyle","ReactDOM","render","secondary","document","getElementById"],"mappings":"0QAGA,IAAMA,EAAcC,IAAOC,GAAV,KACR,SAAAC,GAAK,OAAIA,EAAMC,OAASD,EAAME,MAAMC,OAAOC,WAQrCC,EALD,SAACL,GACX,OAAO,cAACH,EAAD,eAAiBG,K,qKCL5B,IAAMM,EAAaR,IAAOS,IAAV,KAEE,SAAAP,GAAK,OAAIA,EAAMQ,WAAa,SAC/B,SAAAR,GAAK,OAAIA,EAAMS,OAAS,aACpB,SAAAT,GAAK,OAAIA,EAAMU,SAAW,aACpC,qBAAEC,QAAsB,OAOlBC,EAJF,SAACZ,GACV,OAAO,cAACM,EAAD,eAAgBN,K,gICT3B,IAAMa,EAAaf,IAAOS,IAAV,KAEP,SAAAP,GAAK,OAAIA,EAAMC,OAASD,EAAME,MAAMC,OAAOC,WAQrCU,EAJF,SAACd,GACV,OAAO,cAACa,EAAD,eAAgBb,K,mTCL3B,IAAMe,EAAgBjB,IAAOkB,SAAV,KAOV,SAAAhB,GAAK,OAAIA,EAAMC,OAASD,EAAME,MAAMC,OAAOC,WAI3C,SAAAJ,GAAK,OAAIA,EAAME,MAAMe,MAAMC,SAG3B,SAAAlB,GAAK,OAAIA,EAAME,MAAMe,MAAME,UA0BrBC,EArBC,SAAC,GAAuB,IAAtBnB,EAAqB,EAArBA,MAAUD,EAAW,2BACTqB,mBAAS,CAAC,kBADD,mBAC5BC,EAD4B,KACrBC,EADqB,KASnC,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAMf,UAAW,SAAUG,OAAO,SAAlC,SACKW,EAAME,KAAI,SAACC,EAAKC,GAAN,OACP,cAAC,EAAD,CAAczB,MAAM,QAApB,SAA6BwB,GAAlBC,QAGnB,cAACX,EAAD,aAAeY,WAbJ,SAAAC,GACI,KAAfA,EAAEC,UACFN,EAAS,GAAD,mBAAKD,GAAL,CAAY,oBAWmBrB,MAAOA,GAAWD,Q,owBCrCrE,IAAM8B,EAAkBC,YAAH,KAQfC,EAAelC,IAAOmC,OAAOC,OAAM,SAAAlC,GAAK,MAAK,CAC/CmC,UAAU,KADOrC,CAAH,IAaDgC,GAEH,SAAA9B,GAAK,OAAIA,EAAMS,OAAS,aAEpC,SAAAT,GAAK,OAAIA,EAAMI,SAAWgC,YAAjB,KACE,SAAApC,GAAK,OAAIA,EAAMC,OAAS,WACnB,SAAAD,GAAK,OAAIA,EAAMqC,YAAc,cAC7C,SAAArC,GAAK,OAAIA,EAAMmC,UAAYC,YAAlB,KACE,SAAApC,GAAK,OAAIA,EAAMC,OAAS,WACb,SAAAD,GAAK,OAAIA,EAAMC,OAAS,cAWjCqC,GARKxC,YAAOkC,EAAPlC,CAAH,KAIF,SAACE,GACZ,OAAO,cAACgC,EAAD,eAAkBhC,M,8IClC7B,IAAMuC,EAAazC,IAAOS,IAAV,KAiCDiC,EA1BH,WAaR,OACI,eAACD,EAAD,WACI,cAAC,EAAD,CAAM7B,QAAQ,SAAd,SACI,cAAC,EAAD,CAAOT,MAAM,QAAb,4CAEJ,eAAC,EAAD,CAAMO,UAAU,SAASG,OAAQ,SAAjC,UACG,cAAC,EAAD,IACD,cAAC,EAAD,CAAQ8B,QAnBL,WAEIC,QAAQ,qBAEjBC,MAAM,sBAENA,MAAM,iBAamB1C,MAAM,QAASQ,MAAM,WAAUL,SAAO,EAA7D,2E,yKC7Bd,IAAMwC,EAASC,YAAH,KAmBZC,IAASC,OACL,eAAC,IAAD,CAAe7C,MAZL,CACVC,OAAQ,CACJC,QAAS,QACT4C,UAAW,OAEf/B,MAAO,CACHC,MAAO,qBACPC,OAAQ,8CAKZ,UACI,cAACyB,EAAD,IACA,cAAC,EAAD,OAENK,SAASC,eAAe,W","file":"static/js/main.dbdb695f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledTitle = styled.h1`\r\ncolor: ${props => props.color || props.theme.colors.primary};\r\n`\r\n\r\nconst Title = (props) => {\r\n    return <StyledTitle {...props}/>\r\n\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFlex = styled.div`\r\ndisplay: flex;\r\nflex-direction: ${props => props.direction || 'row'};\r\nalign-items: ${props => props.align || 'stretch'};\r\njustify-content: ${props => props.justify || 'stretch'};\r\nmargin:${({margin}) => margin || '0'} ;\r\n`\r\n\r\nconst Flex = (props) => {\r\n    return <StyledFlex {...props} />\r\n};\r\n\r\nexport default Flex;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLine = styled.div`\r\nfont-size: 24px;\r\ncolor: ${props => props.color || props.theme.colors.primary};\r\n\r\n`\r\n\r\nconst Line = (props) => {\r\n    return <StyledLine {...props}/>\r\n};\r\n\r\nexport default Line;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport Flex from \"./Flex\";\r\nimport Line from \"./Line\";\r\n\r\nconst StyledConsole = styled.textarea`\r\nwidth:100%;\r\nheight:70vh;\r\nbackground: #020E00;\r\nfont-size: 24px;\r\nborder: none;\r\nresize: none;\r\ncolor: ${props => props.color || props.theme.colors.primary};\r\n&:focus {\r\n    outline: none;\r\n}\r\n@media ${props => props.theme.media.phone} {\r\n    border: 1px solid red;\r\n}\r\n@media ${props => props.theme.media.tablet} {\r\n    border: 1px solid green;\r\n}\r\n`\r\n\r\nconst Console = ({color, ...props}) => {\r\n    const [lines, setLines] = useState(['C/Maratik555>'])\r\n\r\n    const onKeyPress = e => {\r\n        if (e.charCode === 13) {\r\n            setLines([...lines, \"C/Maratik555>\"])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex>\r\n            <Flex direction={\"column\"} margin=\"0 10px\">\r\n                {lines.map((line,i) =>\r\n                    <Line key={i} color=\"green\">{line}</Line>\r\n                )}\r\n            </Flex>\r\n            <StyledConsole onKeyPress={onKeyPress} color={color} {...props}/>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default Console;\r\n","import React from 'react';\r\nimport styled, {css, keyframes} from 'styled-components'\r\n\r\nconst rotateAnimation = keyframes`\r\n{\r\n    transform: rotateZ(0deg);\r\n}\r\nto {    transform: rotateZ(360deg);\r\n}\r\n`\r\n\r\nconst StyledButton = styled.button.attrs(props => ({\r\n    outlined: true,\r\n}))\r\n    \r\n`border-radius:10px;\r\nborder: none;\r\npadding: 10px 15px;\r\nfont-size: 18px;\r\ncursor: pointer;\r\n&:focus {\r\n    outline: none;\r\n}\r\n&: hover {\r\n    animation: ${rotateAnimation} 2s infinite linear;\r\n}\r\nalign-self: ${props => props.align || 'stretch'};\r\n\r\n${props => props.primary && css`\r\n    color: ${props => props.color || 'white'};\r\n    background: ${props => props.background || 'white'};`}\r\n${props => props.outlined && css`\r\n    color: ${props => props.color || 'white'};\r\n    border: 1px solid ${props => props.color || \"white\"};\r\n    background: transparent;`}`\r\n\r\nconst LargeButton = styled(StyledButton)`\r\n    font-size: 30px;\r\n`\r\n\r\nconst Button = (props) => {\r\n    return <StyledButton {...props} />\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Title from \"./components/Title\";\r\nimport Flex from \"./components/Flex\";\r\nimport Console from \"./components/Console\";\r\nimport Button from \"./components/Button\";\r\n\r\nconst AppWrapper = styled.div`\r\nwidth:100%;\r\nmin-height: 100vh;\r\npadding: 2rem;\r\nbackground: #020E00;\r\n`\r\n\r\nconst App = () => {\r\n    const onCl = () => {\r\n // eslint-disable-next-line no-restricted-globals\r\n        const name = confirm('styled-components')\r\n        if (name) {\r\n            alert(`âœ”ðŸ˜‹`)\r\n        } else {\r\n            alert(`ðŸ˜¢`)\r\n        }\r\n \r\n}\r\n\r\n\r\n    return (\r\n        <AppWrapper>\r\n            <Flex justify=\"center\">\r\n                <Title color=\"green\" >Console cmd 2022. Maratik555</Title>\r\n            </Flex>\r\n            <Flex direction=\"column\" margin={\"10px 0\"}>\r\n               <Console/>\r\n              <Button onClick={onCl} color=\"green\"  align=\"flex-end\"primary>ÐžÑ‚Ð¿Ñ€Ð°Ð²Ð¸Ñ‚ÑŒ</Button>\r\n            </Flex>\r\n        </AppWrapper>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {createGlobalStyle, ThemeProvider} from 'styled-components'\r\n\r\nconst Global = createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: consolas;\r\n}\r\n`\r\nconst theme = {\r\n    colors: {\r\n        primary: \"white\",\r\n        secondary: \"red\",\r\n    },\r\n    media: {\r\n        phone: \"(max-width: 425px)\",\r\n        tablet: \"(max-width: 768px) and (min-width: 425px)\",\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <ThemeProvider theme={theme}>\r\n        <Global/>\r\n        <App />\r\n    </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}